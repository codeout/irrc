require 'spec_helper'

describe 'Whois as-set resolution' do
  include_context 'whois queries'

  context 'When FQDN specified for Whois server' do
    subject {send_query(whois_fqdn, 'AS-JPNIC')}

    it 'returns ipv4 and ipv6 prefixes by default' do
      expect(subject['AS-JPNIC'][:ipv4]['AS2515']).to include '192.41.192.0/24', '202.12.30.0/24',
                                                              '211.120.240.0/21', '211.120.248.0/24'
      expect(subject['AS-JPNIC'][:ipv6]['AS2515']).to include '2001:dc2::/32', '2001:0fa0::/32'
    end
  end

  context 'When a name specified for Whois server' do
    subject {send_query(whois, as_set)}

    it 'returns the same result as if the FQDN specified' do
      expect(subject).to eq send_query(whois_fqdn, as_set)
    end
  end

  it 'gently closes connections to Whois server' do
    expect_any_instance_of(Irrc::Whoisd::Client).to receive(:close)
    send_query(whois_fqdn, as_set)
  end

  describe 'Fintering by Authoritative Whois server' do
    subject {send_query(:jpirr, 'AS-JPNIC', source: :apnic)}

    it 'returns nothing' do
      expect(subject).to eq({})
    end
  end

  context 'When as-set resolution is done but something wrong while further processes' do
    subject {send_query(whois, as_set)}
    before do
      allow_any_instance_of(Irrc::Whoisd::Client).to receive(:expand_aut_num) {raise}
    end

    it 'ignores a halfway result' do
      expect(subject).to eq({"AS-JPNIC" => {:ipv4 => {"AS2515" => []}, :ipv6 => {"AS2515" => []}}})
    end
  end

  context 'When only ipv4 is specified for protocol' do
    subject {send_query(whois, as_set, protocol: :ipv4)}

    it 'returns nothing about ipv6' do
      expect(subject[as_set][:ipv6]).to be_nil
    end
  end

  context 'When nil specified for protocol' do
    subject {send_query(whois, as_set, protocol: nil)}

    it 'returns nothing about the as-set' do
      expect(subject[as_set]).to eq({})
    end
  end

  context 'When blank protocol specified' do
    subject {send_query(whois, as_set, protocol: [])}

    it 'returns nothing about the as-set' do
      expect(subject[as_set]).to eq({})
    end
  end

  context 'When an invalid protocol specified' do
    subject {send_query(whois, as_set, protocol: :invalid)}

    it 'reports an ArgumentError' do
      expect {subject}.to raise_error ArgumentError
    end
  end

  context 'When a non-mirrored server specified for authoritative Whois server' do
    subject {send_query(whois, as_set, source: :outsider)}

    it 'returns nothing' do
      expect(subject).to eq({})
    end
  end

  context 'When nil specified for authoritative Whois server' do
    subject {send_query(whois, as_set, source: nil)}

    it 'returns a result without any filter of authoritative Whois server' do
      expect(subject).to eq send_query(whois, as_set)
    end
  end

  context 'When blank authoritative Whois server specified' do
    subject {send_query(whois, as_set, source: [])}

    it 'returns a result without any filter of authoritative Whois server' do
      expect(subject).to eq send_query(whois, as_set)
    end
  end

  context 'When non-existent Whois object specified' do
    subject {send_query(whois, 'AS-NON-EXISTENT')}

    it 'ignores the Whois error' do
      expect(subject).to eq({})
    end
  end

  context 'When as-sets cross-refers to each other' do
    before do
      allow_any_instance_of(Irrc::Whoisd::Client).to receive(:execute) {|client, command|
        case command
        when /AS-A/
          "members:        AS1\nmembers:        AS-B"
        when /AS-B/
          "members:        AS-A"
        when /AS1/
          "route:          192.0.2.0/24"
        end
      }
    end
    let(:looped_as_set) {'AS-A'}

    subject {send_query(whois, looped_as_set)}

    it 'breaks out of the loop and returns something' do
      expect(subject['AS-A']).to eq(
                                   {:ipv4 => {"AS1" => ["192.0.2.0/24"]}, :ipv6 => {"AS1" => []}}
                                 )
    end
  end

  context 'When route-sets cross-refers to each other' do
    before do
      allow_any_instance_of(Irrc::Whoisd::Client).to receive(:execute) {|client, command|
        case command
        when /RS-A/
          "members:        192.0.2.0/24\nmembers:        RS-B"
        when /RS-B/
          "members:        RS-A"
        end
      }
    end
    let(:looped_route_set) {'RS-A'}

    subject {send_query(whois, looped_route_set)}

    it 'breaks out of the loop and returns something' do
      expect(subject['RS-A']).to eq(
                                   {:ipv4 => {nil => ["192.0.2.0/24"]}, :ipv6 => {nil => []}}
                                 )
    end
  end

  context 'When invalid Whois server name specified' do
    subject {send_query(:invalid, as_set)}

    it 'reports an error' do
      expect {subject}.to raise_error "Unknown type of IRR for 'invalid'."
    end
  end

  context 'When non-resolvable Whois server fqdn specified' do
    subject {send_query('non-resolvable.localdomain', as_set)}

    it 'reports an error' do
      expect {subject}.to raise_error "Unknown type of IRR for 'non-resolvable.localdomain'."
    end
  end

  context 'When unreachable Whois server specified' do
    subject {send_query('192.0.2.1', as_set)}

    it 'reports an error' do
      expect {subject}.to raise_error "Unknown type of IRR for '192.0.2.1'."
    end
  end

  context 'When specifing an Whois server out of service' do
    subject {send_query('127.0.0.1', as_set)}

    it 'reports an error' do
      expect {subject}.to raise_error "Unknown type of IRR for '127.0.0.1'."
    end
  end

  describe 'NOTE: These may fail due to Whois database changes, not code. Check Whois database if fails.' do
    describe 'route-set' do
      subject {send_query(whois, 'RS-RC-26462')}

      it 'returns the same result as Whois database' do
        expect(subject['RS-RC-26462']).to eq(
                                            {:ipv4 => {nil => ["137.238.0.0/16"]}, :ipv6 => {nil => ["2620:0:5080::/48"]}}
                                          )
      end
    end

    describe 'nested as-set' do
      subject {send_query(whois, 'AS-PDOXUPLINKS', source: :apnic)}

      it 'returns the same result as Whois database' do
        expect(subject['AS-PDOXUPLINKS'])
          .to eq({:ipv4 =>
                    {"AS703" => [],
                     "AS1221" => ["103.129.227.0/24", "103.241.196.0/22", "103.78.241.0/24", "122.200.24.0/23",
                                  "202.36.14.0/24", "202.87.4.0/22", "202.87.4.0/23", "202.87.4.0/24", "202.87.5.0/24",
                                  "203.25.245.0/24", "203.31.4.0/24", "203.31.5.0/24", "203.57.38.0/24",
                                  "203.92.26.0/24"],
                     "AS2764" => ["103.62.28.0/23", "147.76.241.0/24", "147.76.28.0/24", "147.76.52.0/24",
                                  "147.76.53.0/24", "203.24.208.0/24"],
                     "AS7474" => ["147.76.21.0/24"],
                     "AS7657" => [],
                     "AS4565" => [],
                     "AS5650" => [],
                     "AS6461" => ["103.139.130.0/23"]},
                  :ipv6 =>
                    {"AS703" => [],
                     "AS1221" => ["2401:a480::/48"],
                     "AS2764" => [],
                     "AS7474" => ["2405:9000::/32"],
                     "AS7657" => [],
                     "AS4565" => [],
                     "AS5650" => [],
                     "AS6461" => ["2001:df0:7c80::/48"]}}
              )
      end
    end

    describe 'nested route-set' do
      subject {send_query(whois, 'RS-RR-COUDERSPORT')}

      it 'returns the same result as Whois database' do
        expect(subject['RS-RR-COUDERSPORT'])
          .to eq(
                {:ipv4 => {nil => ["71.74.32.0/20", "75.180.128.0/19", "107.14.160.0/20"]},
                 :ipv6 => {nil => []}}
              )
      end
    end

    describe 'members with a comment' do
      subject {send_query('whois.ripe.net', 'AS16086:AS-CUST-FI', source: :ripe)}

      it 'returns the same result as Whois database' do
        expect(subject['AS16086:AS-CUST-FI'])
          .to eq(
                {:ipv4 =>
                   {"AS16086" => ["109.108.0.0/19", "143.51.128.0/17", "146.211.0.0/16", "157.94.16.0/24", "159.255.224.0/19", "176.93.0.0/16", "178.55.0.0/16", "178.75.128.0/18", "185.15.212.0/22", "185.151.248.0/22", "185.174.24.0/22", "185.196.4.0/22", "185.214.156.0/22", "185.55.32.0/22", "188.67.0.0/16", "188.94.64.0/21", "192.102.52.0/24", "192.107.200.0/21", "192.107.208.0/20", "192.107.224.0/21", "192.49.54.0/24", "192.49.90.0/24", "192.98.100.0/24", "193.143.125.0/24", "193.143.126.0/24", "193.143.127.0/24", "193.143.225.0/24", "193.143.70.0/23", "193.143.73.0/24", "193.143.79.0/24", "193.143.80.0/21", "193.143.88.0/23", "193.143.91.0/24", "193.143.93.0/24", "193.143.94.0/23", "193.234.216.0/22", "194.100.0.0/16", "195.10.128.0/18", "195.234.142.0/24", "195.234.196.0/22", "195.95.208.0/23", "212.146.0.0/18", "212.149.128.0/17", "212.50.128.0/19", "212.86.0.0/19", "212.90.64.0/19", "213.139.160.0/19", "213.141.96.0/19", "213.186.224.0/19", "213.186.224.0/24", "213.216.192.0/18", "213.243.128.0/18", "217.78.192.0/19", "37.130.160.0/19", "37.136.0.0/16", "37.219.0.0/16", "37.33.0.0/16", "62.113.160.0/19", "62.165.128.0/18", "62.183.128.0/17", "62.197.160.0/19", "62.236.0.0/15", "62.241.192.0/18", "62.44.192.0/18", "62.78.128.0/17", "62.78.96.0/19", "78.27.64.0/18", "80.64.0.0/20", "81.175.128.0/17", "82.128.128.0/17", "82.181.0.0/16", "82.203.128.0/17", "83.100.0.0/17", "83.102.0.0/17", "83.143.56.0/21", "83.146.160.0/20", "84.253.192.0/18", "85.131.0.0/17", "85.23.0.0/16", "87.100.128.0/17", "87.92.0.0/14", "88.148.128.0/17", "89.166.0.0/17", "89.27.0.0/17", "91.145.64.0/18"], "AS12375" => [], "AS12918" => [], "AS15501" => [], "AS15970" => [], "AS20542" => [], "AS49422" => [], "AS6793" => [], "AS8236" => ["193.105.76.0/24"], "AS29282" => ["158.90.128.0/17", "217.69.48.0/20", "77.95.144.0/21", "77.95.144.0/22"], "AS48156" => ["158.127.0.0/16", "158.127.128.0/18", "158.127.16.0/20", "158.127.192.0/19", "158.127.20.0/22", "158.127.24.0/21", "158.127.240.0/20", "158.127.32.0/19", "158.127.64.0/18", "158.127.8.0/21", "193.211.44.0/24", "194.137.237.0/24", "194.137.237.224/27", "194.137.36.0/24", "194.137.38.0/24", "195.165.77.0/24"], "AS49762" => ["195.211.16.0/22"], "AS62357" => ["141.98.192.0/22", "141.98.192.0/23", "141.98.194.0/23", "185.39.184.0/22", "185.39.184.0/26", "193.143.192.0/19", "193.143.192.0/22", "193.143.192.0/23", "193.143.194.0/23", "193.143.195.0/24", "193.143.206.0/24", "193.143.253.0/24", "92.118.4.0/22", "92.118.4.0/23", "92.118.6.0/23"], "AS201964" => ["185.55.84.0/22", "31.187.84.0/22"], "AS202180" => ["185.39.128.0/22"], "AS375" => ["131.207.0.0/17", "131.207.0.0/18", "131.207.0.0/19", "131.207.100.0/23", "131.207.103.0/24", "131.207.104.0/21", "131.207.112.0/21", "131.207.120.0/22", "131.207.124.0/23", "131.207.32.0/21", "131.207.40.0/24", "131.207.44.0/22", "131.207.48.0/20", "131.207.64.0/19", "131.207.96.0/22", "192.163.145.0/24", "192.49.0.0/21", "192.49.10.0/24", "192.49.100.0/23", "192.49.100.0/24", "192.49.101.0/24", "192.49.103.0/24", "192.49.104.0/24", "192.49.106.0/23", "192.49.108.0/22", "192.49.109.0/24", "192.49.111.0/24", "192.49.112.0/24", "192.49.113.0/24", "192.49.114.0/23", "192.49.119.0/24", "192.49.120.0/22", "192.49.124.0/23", "192.49.126.0/24", "192.49.131.0/24", "192.49.134.0/24", "192.49.136.0/23", "192.49.139.0/24", "192.49.140.0/23", "192.49.144.0/24", "192.49.146.0/24", "192.49.148.0/22", "192.49.152.0/21", "192.49.160.0/23", "192.49.163.0/24", "192.49.164.0/22", "192.49.168.0/23", "192.49.170.0/24", "192.49.173.0/24", "192.49.174.0/23", "192.49.175.0/24", "192.49.176.0/20", "192.49.177.0/24", "192.49.178.0/23", "192.49.180.0/22", "192.49.184.0/21", "192.49.19.0/24", "192.49.192.0/18", "192.49.20.0/24", "192.49.22.0/24", "192.49.36.0/22", "192.49.36.0/24", "192.49.40.0/23", "192.49.52.0/23", "192.49.55.0/24", "192.49.56.0/21", "192.49.64.0/22", "192.49.64.0/23", "192.49.67.0/24", "192.49.68.0/24", "192.49.70.0/23", "192.49.72.0/24", "192.49.73.0/24", "192.49.86.0/23", "192.49.88.0/24", "192.49.91.0/24", "192.49.92.0/22", "192.49.96.0/24", "192.49.98.0/23", "192.49.99.0/24"], "AS3222" => ["164.5.0.0/17", "164.5.128.0/18", "164.5.208.0/20", "164.5.224.0/19", "185.16.168.0/22", "77.95.240.0/21"], "AS3274" => ["193.28.203.0/24", "81.20.224.0/20", "81.20.224.0/24", "81.20.225.0/24", "81.20.226.0/24", "81.20.227.0/24", "81.20.228.0/24", "81.20.229.0/24", "81.20.230.0/24", "81.20.231.0/24", "81.20.232.0/24", "81.20.233.0/24", "81.20.234.0/24", "81.20.235.0/24", "81.20.236.0/24", "81.20.237.0/24", "81.20.238.0/24", "81.20.239.0/24"], "AS3573" => ["159.167.188.0/22", "194.146.68.0/24", "194.146.69.0/24"], "AS5420" => ["192.40.72.0/24", "192.40.73.0/24", "192.40.74.0/24", "192.40.75.0/24", "192.40.76.0/22"], "AS6839" => ["89.200.192.0/21"], "AS6852" => ["193.169.100.0/23"], "AS12630" => ["185.207.84.0/22", "212.68.0.0/19"], "AS20571" => ["217.169.64.0/20", "217.169.64.0/22"], "AS20774" => [], "AS21348" => ["80.246.144.0/20", "80.95.128.0/20"], "AS21490" => ["193.110.64.0/22", "193.110.64.0/24", "193.110.65.0/24", "193.110.66.0/24", "193.110.67.0/24"], "AS24713" => ["132.155.56.0/22", "132.155.58.0/23", "185.134.88.0/22", "80.248.160.0/20", "81.22.160.0/20"], "AS25213" => ["134.37.0.0/16"], "AS29093" => ["195.234.135.0/24"], "AS29293" => ["91.221.238.0/23"], "AS34541" => ["185.193.76.0/22", "217.112.192.0/20"], "AS39194" => ["185.143.60.0/22", "83.146.192.0/18"], "AS39662" => ["87.239.120.0/21", "87.239.122.0/24", "93.190.96.0/21", "93.190.99.0/24"], "AS41701" => ["132.155.0.0/16", "132.155.56.0/22", "145.247.0.0/16", "145.247.0.0/24", "157.129.0.0/16", "157.129.127.0/24", "192.165.244.0/24", "194.103.234.0/23"], "AS41808" => ["89.17.64.0/19"], "AS41878" => ["217.29.224.0/20", "217.29.228.0/24"], "AS42252" => ["77.72.56.0/21"], "AS42540" => ["185.43.120.0/22", "91.123.128.0/20"], "AS42885" => ["185.225.120.0/22", "77.234.96.0/19"], "AS43792" => ["91.198.120.0/24"], "AS49059" => ["87.236.168.0/21", "87.236.169.0/24"], "AS49670" => ["91.213.161.0/24"], "AS50420" => ["193.104.217.0/24", "194.68.115.0/24"], "AS51473" => ["83.216.0.0/19"], "AS51726" => ["91.219.172.0/22"], "AS52004" => ["185.52.164.0/22", "91.220.241.0/24"], "AS52170" => ["91.224.4.0/23"], "AS61395" => ["5.83.56.0/21", "5.83.56.0/22", "5.83.60.0/22"], "AS41747" => ["194.0.80.0/22", "194.0.80.0/22"], "AS13813" => ["185.175.28.0/22", "185.175.28.0/24"], "AS200656" => ["131.228.0.0/21", "131.228.2.0/23", "131.228.32.0/24", "87.254.192.0/21", "87.254.194.0/24", "87.254.196.0/24", "87.254.208.0/23", "87.254.208.0/24", "87.254.209.0/24", "87.254.210.0/23", "87.254.212.0/24", "87.254.213.0/24", "87.254.214.0/23", "87.254.215.0/24", "87.254.216.0/21", "87.254.217.0/24", "87.254.218.0/24", "87.254.220.0/24", "87.254.221.0/24", "87.254.222.0/24", "93.183.0.0/21", "93.183.0.0/24", "93.183.1.0/24", "93.183.12.0/23", "93.183.15.0/24", "93.183.2.0/24", "93.183.20.0/23", "93.183.20.0/24", "93.183.21.0/24", "93.183.24.0/24", "93.183.25.0/24", "93.183.26.0/24", "93.183.27.0/24", "93.183.3.0/24", "93.183.31.0/24", "93.183.4.0/24", "93.183.5.0/24", "93.183.6.0/24", "93.183.7.0/24"], "AS34387" => ["85.188.0.0/18", "85.188.16.0/20", "85.188.32.0/19", "85.188.8.0/21"], "AS49802" => ["91.213.97.0/24"], "AS48652" => ["195.8.60.0/23"], "AS60616" => [], "AS28883" => ["185.251.48.0/22", "194.240.69.0/24", "195.237.80.0/24"], "AS41264" => [], "AS60109" => ["185.57.180.0/22", "37.16.100.0/22", "37.16.108.0/23"], "AS56900" => ["109.69.120.0/21"], "AS50290" => ["109.69.32.0/22", "185.74.172.0/23", "185.74.174.0/23", "31.15.124.0/22", "46.30.130.0/23", "46.30.132.0/22"], "AS206520" => ["185.184.44.0/24"], "AS198514" => ["109.70.176.0/21", "109.70.176.0/24", "109.70.177.0/24", "109.70.178.0/24", "109.70.179.0/24", "109.70.180.0/24", "109.70.181.0/24", "109.70.182.0/24", "109.70.183.0/24", "37.114.80.0/21", "37.114.80.0/22", "37.114.84.0/23", "37.114.87.0/24", "46.231.192.0/21", "46.231.192.0/24", "46.231.193.0/24", "46.231.194.0/24", "46.231.196.0/24", "46.231.197.0/24", "46.231.198.0/24", "46.231.199.0/24"], "AS206927" => ["185.171.176.0/22", "185.171.176.0/24", "185.171.177.0/24", "185.171.178.0/24", "185.171.179.0/24"], "AS60414" => ["185.31.136.0/22", "185.31.136.0/24", "85.194.238.0/23", "85.194.239.0/24", "89.44.211.0/24"], "AS41561" => ["193.201.244.0/22", "195.78.70.0/23"], "AS203296" => ["185.139.168.0/22"], "AS202407" => ["193.56.196.0/22"], "AS395266" => [], "AS206175" => ["62.148.121.0/24", "62.148.122.0/24", "62.148.124.0/24", "62.148.125.0/24", "62.148.96.0/19"], "AS201750" => ["185.252.116.0/22", "185.252.116.0/24", "185.252.117.0/24", "185.252.118.0/24", "185.252.119.0/24"], "AS205449" => ["185.218.88.0/22"], "AS196904" => ["185.16.192.0/22", "185.16.194.0/24", "185.16.195.0/24", "193.105.57.0/24"], "AS8145" => ["85.208.92.0/22"], "AS49282" => ["164.215.32.0/21", "185.18.76.0/22", "95.175.96.0/19"], "AS198243" => [], "AS200087" => ["185.37.132.0/22"], "AS16273" => ["193.110.108.0/23", "193.110.108.0/24", "46.228.128.0/23", "46.228.128.0/24", "46.228.129.0/24", "46.228.130.0/23", "46.228.132.0/23", "46.228.134.0/23", "46.228.140.0/23", "46.228.143.0/24"], "AS201057" => ["185.162.156.0/22", "185.87.108.0/22", "85.194.204.0/22"], "AS201056" => ["46.228.128.0/24", "46.228.129.0/24", "46.228.134.0/23", "46.228.143.0/24"], "AS61340" => ["185.10.196.0/22", "185.10.196.0/24", "185.10.197.0/24", "185.10.198.0/24", "185.10.199.0/24"], "AS203899" => [], "AS31639" => ["185.28.247.0/24"], "AS1342" => ["141.192.0.0/16", "185.205.0.0/22", "185.205.0.0/24", "185.205.1.0/24", "185.205.2.0/24", "185.205.3.0/24", "185.231.144.0/22", "193.105.160.0/24", "213.138.128.0/19", "213.214.128.0/18"], "AS20861" => ["140.150.0.0/16", "185.101.56.0/22", "192.16.147.0/24", "194.68.229.0/24", "80.67.192.0/20"], "AS202677" => ["185.231.144.0/23", "185.231.144.0/24", "185.231.145.0/24", "213.214.160.0/21", "213.214.160.0/24", "213.214.161.0/24", "213.214.162.0/24", "213.214.163.0/24", "213.214.164.0/24", "213.214.165.0/24", "213.214.166.0/24", "213.214.167.0/24"], "AS20569" => ["212.149.64.0/18", "213.140.160.0/19", "213.173.128.0/19", "217.140.128.0/17", "81.16.64.0/20", "84.34.0.0/16", "86.114.0.0/16"], "AS30978" => ["82.199.224.0/19"], "AS29240" => ["185.217.236.0/22", "185.244.244.0/22", "185.77.244.0/22", "193.142.1.0/24", "193.142.16.0/23", "193.143.100.0/22", "193.143.104.0/21", "193.143.112.0/22", "193.143.116.0/23", "193.143.118.0/24", "193.143.99.0/24", "195.225.176.0/22", "213.255.160.0/19", "213.255.162.0/23", "213.255.164.0/23", "213.255.176.0/23", "213.255.178.0/23", "213.255.188.0/23", "213.255.190.0/23"], "AS29243" => ["109.163.208.0/21", "185.168.212.0/22", "80.83.0.0/20"], "AS39242" => ["109.70.160.0/21", "81.19.112.0/20"], "AS198936" => ["185.159.238.0/23", "91.105.248.0/21", "91.105.248.0/24", "91.105.249.0/24", "91.105.250.0/24", "91.105.251.0/24", "91.105.252.0/24", "91.105.253.0/24", "91.105.254.0/24", "91.105.255.0/24", "185.159.238.0/23", "91.105.248.0/21", "91.105.248.0/24", "91.105.249.0/24", "91.105.250.0/24", "91.105.251.0/24", "91.105.252.0/24", "91.105.253.0/24", "91.105.254.0/24", "91.105.255.0/24"], "AS51164" => ["157.94.0.0/16", "178.217.128.0/21", "185.93.48.0/22", "192.26.111.0/24", "46.255.192.0/21"], "AS20574" => ["178.21.80.0/21", "185.119.100.0/22", "193.108.42.0/23"], "AS210167" => ["194.147.80.0/22"], "AS62022" => ["185.50.244.0/22"], "AS202053" => ["185.20.136.0/22", "185.26.48.0/22", "5.253.32.0/22", "80.69.172.0/22", "83.136.248.0/21", "94.237.0.0/24", "94.237.1.0/24", "94.237.112.0/21", "94.237.120.0/22", "94.237.24.0/21", "94.237.32.0/21", "94.237.4.0/23", "94.237.40.0/21", "94.237.48.0/20", "94.237.6.0/24", "94.237.64.0/20", "94.237.8.0/21", "94.237.80.0/20"], "AS25697" => [], "AS39324" => ["185.163.56.0/22", "185.179.236.0/24", "185.179.237.0/24", "185.33.72.0/22", "217.64.32.0/20", "81.22.240.0/20", "91.227.187.0/24", "91.227.192.0/23"], "AS46805" => ["104.160.22.0/24", "104.160.23.0/24", "104.160.24.0/24", "104.160.25.0/24", "104.160.26.0/24", "104.160.27.0/24", "107.150.92.0/24", "107.150.93.0/24", "107.150.95.0/24", "192.40.89.0/24", "192.40.95.0/24", "23.92.112.0/24", "23.92.113.0/24", "23.92.114.0/24"], "AS47536" => ["130.185.153.0/24", "151.237.188.0/24", "23.92.127.0/24", "37.72.186.0/24", "5.157.11.0/24", "5.157.13.0/24", "5.157.14.0/24", "5.157.15.0/24", "5.157.23.0/24", "5.157.24.0/24", "5.157.29.0/24", "5.157.32.0/24", "5.157.33.0/24", "5.157.37.0/24", "5.157.43.0/24", "5.157.53.0/24", "5.157.55.0/24", "5.157.6.0/24"], "AS61133" => [], "AS58065" => [], "AS206804" => ["141.98.212.0/24", "141.98.214.0/24", "141.98.215.0/24", "157.157.87.0/24", "185.195.237.0/24", "185.227.68.0/24", "185.234.73.0/24", "193.36.116.0/24", "193.36.117.0/24", "193.36.118.0/24", "193.36.119.0/24", "5.8.16.0/24", "91.196.70.0/24"], "AS199231" => ["185.4.228.0/22", "213.135.92.0/24"], "AS50503" => ["109.204.128.0/17", "185.128.16.0/22"], "AS35382" => ["5.23.56.0/21", "83.143.216.0/21"], "AS199486" => ["31.47.64.0/21"], "AS203602" => ["185.255.244.0/22"], "AS41993" => ["185.82.144.0/22"]},
                 :ipv6 =>
                   {"AS16086" => ["2001:14b8::/29", "2001:1b70:81::/48", "2001:4078::/29", "2001:67c:1850::/48", "2001:67c:19b0::/46", "2001:67c:1bb0::/48", "2001:6e8::/29", "2a01:a800::/29", "2a07:7840::/29", "2a0a:62c0::/32"], "AS12375" => [], "AS12918" => [], "AS15501" => [], "AS15970" => [], "AS20542" => [], "AS49422" => [], "AS6793" => [], "AS8236" => [], "AS29282" => ["2a00:9b00::/32"], "AS48156" => [], "AS49762" => ["2001:67c:245c::/48"], "AS62357" => ["2a04:7980::/29", "2a09:1440::/29"], "AS201964" => ["2a02:4820::/32"], "AS202180" => [], "AS375" => ["2a03:9b80::/34"], "AS3222" => [], "AS3274" => ["2001:67c:110::/48"], "AS3573" => ["2a02:ee80:2010::/44", "2a02:ee80:2020::/44", "2a02:ee80:2030::/44", "2a02:ee80:2040::/44", "2a02:ee80:300::/40", "2a02:ee80:400c::/47", "2a02:ee80:400e::/48", "2a02:ee80:4010::/47", "2a02:ee80:4011::/48", "2a02:ee80:4012::/47", "2a02:ee80:4012::/48", "2a02:ee80:4016::/47", "2a02:ee80:402a::/47", "2a02:ee80:4034::/47", "2a02:ee80:4038::/47", "2a02:ee80:4040::/47", "2a02:ee80:4046::/47", "2a02:ee80:4048::/47", "2a02:ee80:404a::/47", "2a02:ee80:404c::/48", "2a02:ee80:4054::/47", "2a02:ee80:4054::/48", "2a02:ee80:4055::/48", "2a02:ee80:4060::/47", "2a02:ee80:4066::/47", "2a02:ee80:4066::/48", "2a02:ee80:4067::/48", "2a02:ee80:4068::/47", "2a02:ee80:406a::/47", "2a02:ee80:406a::/48", "2a02:ee80:406b::/48", "2a02:ee80:406c::/47", "2a02:ee80:406c::/48", "2a02:ee80:406e::/47", "2a02:ee80:406e::/48", "2a02:ee80:406f::/48", "2a02:ee80:4070::/47", "2a02:ee80:4070::/48", "2a02:ee80:4071::/48", "2a02:ee80:4072::/47", "2a02:ee80:4074::/47", "2a02:ee80:4074::/48", "2a02:ee80:4075::/48", "2a02:ee80:4076::/47", "2a02:ee80:4076::/48", "2a02:ee80:4077::/48", "2a02:ee80:4078::/47", "2a02:ee80:4078::/48", "2a02:ee80:4079::/48", "2a02:ee80:407a::/47", "2a02:ee80:407c::/47", "2a02:ee80:407c::/48", "2a02:ee80:407d::/48", "2a02:ee80:407e::/47", "2a02:ee80:407e::/48", "2a02:ee80:407f::/48", "2a02:ee80:4080::/47", "2a02:ee80:4080::/48", "2a02:ee80:4081::/48", "2a02:ee80:4082::/47", "2a02:ee80:4082::/48", "2a02:ee80:4083::/48", "2a02:ee80:4084::/47", "2a02:ee80:4084::/48", "2a02:ee80:4085::/48", "2a02:ee80:4086::/47", "2a02:ee80:4086::/48", "2a02:ee80:4087::/48", "2a02:ee80:4088::/47", "2a02:ee80:4088::/48", "2a02:ee80:4089::/48", "2a02:ee80:408a::/47", "2a02:ee80:408c::/47", "2a02:ee80:408e::/47", "2a02:ee80:4090::/47", "2a02:ee80:4092::/47", "2a02:ee80:4094::/47", "2a02:ee80:4094::/48", "2a02:ee80:4095::/48", "2a02:ee80:4096::/47", "2a02:ee80:4098::/47", "2a02:ee80:409a::/47", "2a02:ee80:409c::/47", "2a02:ee80:409e::/47", "2a02:ee80:40a4::/47", "2a02:ee80:40a4::/48", "2a02:ee80:40a5::/48", "2a02:ee80:40a8::/47", "2a02:ee80:40aa::/47", "2a02:ee80:40ae::/47", "2a02:ee80:40b0::/47", "2a02:ee80:4100::/47", "2a02:ee80:4102::/47", "2a02:ee80:4102::/48", "2a02:ee80:4103::/48", "2a02:ee80:4104::/47", "2a02:ee80:4104::/48", "2a02:ee80:4105::/48", "2a02:ee80:4106::/47", "2a02:ee80:4108::/47", "2a02:ee80:410a::/47", "2a02:ee80:410c::/47", "2a02:ee80:410e::/47", "2a02:ee80:4110::/47", "2a02:ee80:4110::/48", "2a02:ee80:4111::/48", "2a02:ee80:4112::/47", "2a02:ee80:4114::/47", "2a02:ee80:4114::/48", "2a02:ee80:4115::/48", "2a02:ee80:4118::/47", "2a02:ee80:4118::/48", "2a02:ee80:4119::/48", "2a02:ee80:411a::/47", "2a02:ee80:411a::/48", "2a02:ee80:411b::/48", "2a02:ee80:411c::/47", "2a02:ee80:411e::/47", "2a02:ee80:411e::/48", "2a02:ee80:411f::/48", "2a02:ee80:4120::/47", "2a02:ee80:4120::/48", "2a02:ee80:4121::/48", "2a02:ee80:4122::/47", "2a02:ee80:4122::/48", "2a02:ee80:4123::/48", "2a02:ee80:4128::/47", "2a02:ee80:412a::/47", "2a02:ee80:4138::/47", "2a02:ee80:4138::/48", "2a02:ee80:4139::/48", "2a02:ee80:413a::/47", "2a02:ee80:413c::/47", "2a02:ee80:413c::/48", "2a02:ee80:413d::/48", "2a02:ee80:4148::/47", "2a02:ee80:4148::/48", "2a02:ee80:4149::/48", "2a02:ee80::/32"], "AS5420" => ["2001:67c:21a4::/48", "2a06:f040::/32"], "AS6839" => ["2001:67c:2168::/48"], "AS6852" => [], "AS12630" => ["2a02:4880::/32"], "AS20571" => ["2a0a:b7c0::/32"], "AS20774" => [], "AS21348" => ["2a01:51a0::/32"], "AS21490" => [], "AS24713" => ["2a03:d640::/32"], "AS25213" => [], "AS29093" => [], "AS29293" => [], "AS34541" => [], "AS39194" => ["2a00:7a20::/32"], "AS39662" => ["2a00:13f0:0:1000::/64", "2a00:13f0:0:1001::/64", "2a00:13f0:0:1002::/64", "2a00:13f0:0:1003::/64", "2a00:13f0:0:1004::/64", "2a00:13f0:0:1005::/64", "2a00:13f0:0:1006::/64", "2a00:13f0:0:1007::/64", "2a00:13f0:0:1008::/64", "2a00:13f0:0:1::/64", "2a00:13f0:0:2::/64", "2a00:13f0:0:3::/64", "2a00:13f0:0:a001::/64", "2a00:13f0::/32", "2a00:13f0::/64"], "AS41701" => ["2001:67c:21d8::/48"], "AS41808" => [], "AS41878" => [], "AS42252" => ["2a00:1778::/32"], "AS42540" => ["2001:678:52c::/48", "2a04:4a80::/29"], "AS42885" => [], "AS43792" => ["2001:67c:17a0::/48"], "AS49059" => [], "AS49670" => [], "AS50420" => [], "AS51473" => [], "AS51726" => [], "AS52004" => ["2a04:bd80::/29"], "AS52170" => [], "AS61395" => ["2a04:680::/30", "2a04:684::/30"], "AS41747" => [], "AS13813" => ["2a0b:cb00:1::/48", "2a0b:cb00:3::/48", "2a0b:cb00:4::/48", "2a0b:cb00::/29"], "AS200656" => ["2a00:8a00:4000::/35", "2a00:8a00:4000::/36", "2a00:8a00:4f01::/48", "2a00:8a00:6000::/35"], "AS34387" => ["2001:67c:15c::/48", "2001:67c:2d74::/48"], "AS49802" => [], "AS48652" => [], "AS60616" => [], "AS28883" => ["2a0c:1540::/29"], "AS41264" => ["2a00:79e0:39::/48"], "AS60109" => ["2a00:4cc2::/32", "2a00:4cc4::/32"], "AS56900" => [], "AS50290" => [], "AS206520" => ["2a0b:2980::/48"], "AS198514" => [], "AS206927" => ["2a0a:e100::/29"], "AS60414" => ["2a00:bbe0::/29", "2a00:bbe0::/32", "2a00:bbe1::/32"], "AS41561" => ["2a04:83c0::/29"], "AS203296" => ["2a0d:c840::/29"], "AS202407" => [], "AS395266" => [], "AS206175" => [], "AS201750" => ["2a0c:2640::/29", "2a0c:2640::/32", "2a0c:2641::/32", "2a0c:2642::/32", "2a0c:2643::/32", "2a0c:2644::/32", "2a0c:2645::/32", "2a0c:2646::/32", "2a0c:2647::/32"], "AS205449" => [], "AS196904" => ["2a03:dc40:ffdf::/48", "2a03:dc40:ffff::/48"], "AS8145" => ["2a09:84c0::/32"], "AS49282" => [], "AS198243" => ["2a03:e580::/29"], "AS200087" => ["2a00:f860::/32"], "AS16273" => ["2a03:7800::/40", "2a03:7800:a00::/40"], "AS201057" => ["2a05:b9c0::/29", "2a0a:2000::/29"], "AS201056" => [], "AS61340" => ["2a03:5fc0::/32"], "AS203899" => ["2001:67c:2e94::/48"], "AS31639" => ["2001:67c:14c0::/48"], "AS1342" => ["2a02:2048::/32"], "AS20861" => [], "AS202677" => [], "AS20569" => ["2001:8b8::/29"], "AS30978" => [], "AS29240" => ["2a01:18::/32"], "AS29243" => ["2001:1430::/32"], "AS39242" => ["2a02:ef0::/32"], "AS198936" => ["2a01:7bc0::/32", "2a01:7bc0::/32"], "AS51164" => ["2001:67c:224::/48", "2a01:6140::/32", "2a0b:8880::/29"], "AS20574" => ["2a03:900::/32"], "AS210167" => ["2a0d:9240::/29"], "AS62022" => ["2a04:c0c0::/29"], "AS202053" => ["2a04:3540::/32", "2a04:3541::/32", "2a04:3542::/32", "2a04:3543::/32", "2a04:3544::/32", "2a04:3545::/32", "2a09:51c0::/29"], "AS25697" => [], "AS39324" => ["2a02:1370::/32", "2a0a:48c0::/32"], "AS46805" => [], "AS47536" => [], "AS61133" => [], "AS58065" => [], "AS206804" => ["2a07:1c44:2200::/40", "2a0b:b87:ffd6::/48", "2a0b:b87:ffd7::/48"], "AS199231" => [], "AS50503" => ["2a00:8780::/32"], "AS35382" => ["2a00:14c0::/32"], "AS199486" => [], "AS203602" => ["2a0c:61c0::/32"], "AS41993" => ["2a05:9100::/29"]},
                })
      end
    end
  end
end
